name: .NET CI & CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ CI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-dotnet@v3     # .NET 7
        with: { dotnet-version: '7.0.x' }
      - uses: actions/setup-dotnet@v3     # .NET 8
        with: { dotnet-version: '8.0.x' }

      - run: dotnet restore
      - run: dotnet build --no-restore -c Release
      - run: dotnet test  --no-build    -c Release --verbosity normal

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Docker Hub CD (kaldÄ±) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  docker-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v4   # Note
        with:
          context: ./NoteService
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/note-service:latest

      - uses: docker/build-push-action@v4   # User
        with:
          context: ./UserService
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest

      - uses: docker/build-push-action@v4   # Gateway
        with:
          context: ./GatewayService
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gateway-service:latest

      - uses: docker/build-push-action@v4   # Auth
        with:
          context: ./auth-server
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/auth-server:latest

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ðŸ”¥ YENÄ° â€” ECR CD â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  ecr-push:                                   # <<< EKLENDÄ°
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # AWS ECRâ€™ye docker login
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Auth-server â†’ ECR
      - uses: docker/build-push-action@v4
        with:
          context: ./auth-server
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/auth-server:latest

      # Note-service â†’ ECR
      - uses: docker/build-push-action@v4
        with:
          context: ./NoteService
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/note-service:latest

      # User-service â†’ ECR
      - uses: docker/build-push-action@v4
        with:
          context: ./UserService
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/user-service:latest

      # Gateway-service â†’ ECR
      - uses: docker/build-push-action@v4
        with:
          context: ./GatewayService
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/gateway-service:latest
